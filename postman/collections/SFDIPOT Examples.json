{
	"info": {
		"_postman_id": "2eab93a3-b24b-400c-8a4b-9f2c194e89af",
		"name": "SFDIPOT Examples",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "2056961-2eab93a3-b24b-400c-8a4b-9f2c194e89af"
	},
	"item": [
		{
			"name": "Structure",
			"item": [
				{
					"name": "Schedule - Ok",
					"id": "b46a4062-42e2-4a96-b1e8-197688f60443",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "2bff2825-f6cf-4fae-b1e2-bd5bbfdb45af",
							"name": "Meeting created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1023,\n    \"topic\": \"S - New meeting\",\n    \"date\": \"2023-04-01\",\n    \"starttime\": \"18:00\",\n    \"length\": 60\n}"
						}
					]
				},
				{
					"name": "Schedule - Disconnected DB",
					"id": "d195966a-d170-42b5-b009-a16b93bfa34c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "00919839-cb7a-4c48-aeec-93e9e51eada0",
							"name": "Disconnected DB - Client error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Request Timeout",
							"code": 408,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "52268a6d-8ace-46da-8687-3d03ee0c36d0",
							"name": "Disconnected DB - Server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"id": "6c463b12-8e7b-4e32-9d39-aa79dc7f853e"
		},
		{
			"name": "Functionality",
			"item": [
				{
					"name": "Schedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "daaa56c6-3198-46be-988a-065caf95306d",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"F - New meeting\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-04-02\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"09:00\");\r",
									"    pm.expect(jsonData.length).to.eql(30);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "805b5b57-bb03-4750-8b11-259d233c374c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"F - New meeting\",\r\n  \"date\": \"2023-04-02\",\r\n  \"starttime\": \"09:00\",\r\n  \"length\": 30\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "817d3476-aec8-4372-b415-d0ec4187d8a3",
							"name": "Meeting created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"F - New meeting\",\r\n  \"date\": \"2023-04-02\",\r\n  \"starttime\": \"09:00\",\r\n  \"length\": 30\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1024,\n    \"topic\": \"F - New meeting\",\n    \"date\": \"2023-04-02\",\n    \"starttime\": \"09:00\",\n    \"length\": 30\n}"
						}
					]
				},
				{
					"name": "Schedule - Existing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2009c1bd-37c7-4e5b-be86-5bc140d75800",
								"exec": [
									"pm.test(\"Status code is bad request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Meeting already scheduled\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a51f16c8-b218-4f73-a413-719a8ecccd93",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"F - New meeting\",\r\n  \"date\": \"2023-04-05\",\r\n  \"starttime\": \"03:00\",\r\n  \"length\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "5d732f9a-c2ab-4681-b583-0e7e520ccc4b",
							"name": "Cannot schedule with same topic",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"F - New meeting\",\r\n  \"date\": \"2023-04-05\",\r\n  \"starttime\": \"03:00\",\r\n  \"length\": 20\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\r\n  \"message\": \"Meeting already scheduled\"\r\n}"
						}
					]
				},
				{
					"name": "Get Meeting By Topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e21b907-43dc-40a6-8a81-7476184b9387",
								"exec": [
									"pm.test(\"Status code is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"F - New meeting\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-04-02\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"09:00\");\r",
									"    pm.expect(jsonData.length).to.eql(30);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9abcc018-39f0-4957-9b80-74bfc9e92c57",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}/?topic=F - New meeting",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "topic",
									"value": "F - New meeting"
								}
							]
						}
					},
					"response": [
						{
							"id": "dea6153e-44ae-494a-9f9e-08adba1eb48d",
							"name": "Meeting received",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=F - New meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "F - New meeting"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1024,\n    \"topic\": \"F - New meeting\",\n    \"date\": \"2023-04-02\",\n    \"starttime\": \"09:00\",\n    \"length\": 30\n}"
						},
						{
							"id": "33dc8295-78db-4cb2-bc50-c08a31eb3c6c",
							"name": "Meeting not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=XXX",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "XXX"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Meeting not found\"\n}"
						}
					]
				},
				{
					"name": "Delete Meeting By Topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f1d8173-f02c-4d68-ae32-8085db6895f8",
								"exec": [
									"pm.test(\"Status code is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Meeting cancelled\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a9bbf050-8ea2-442d-8d1d-fec28418b064",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}/?topic=F - New meeting",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "topic",
									"value": "F - New meeting"
								}
							]
						}
					},
					"response": [
						{
							"id": "996398f6-ebaa-4aa7-aa8f-d4ba9504ac1c",
							"name": "Meeting cancelled",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=F - New meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "F - New meeting"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Meeting cancelled\"\n}"
						},
						{
							"id": "ade453f8-a0b3-492a-800e-fa657d822b5d",
							"name": "Meeting not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=XXX",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "XXX"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Meeting not found\"\n}"
						}
					]
				}
			],
			"id": "977d858c-433d-44dd-8690-76b73a8cc5bf"
		},
		{
			"name": "Data",
			"item": [
				{
					"name": "Schedule - Ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3ac1146-5d18-4373-89b3-d64ecf43cc85",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"D - New meeting\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-05-01\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"18:00\");\r",
									"    pm.expect(jsonData.length).to.eql(60);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "dde04cbe-56ab-4a01-b018-7d3174c30e13",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"D - New meeting\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "93ff4a42-bcfa-4555-9cda-4ed16244c3b6",
							"name": "Meeting created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"D - New meeting\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1078,\n    \"topic\": \"D - New meeting\",\n    \"date\": \"2023-05-01\",\n    \"starttime\": \"18:00\",\n    \"length\": 60\n}"
						}
					]
				},
				{
					"name": "Schedule - Missing Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "349bea9d-bda9-4a07-9fe6-6b67fce26141",
								"exec": [
									"pm.test(\"Status code is error\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4d9d6e47-dc1d-4a17-a45c-88efc369378e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"D - missing fields\",\r\n  \"date\": \"2023-05-01\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "bdfc95a3-2e08-4414-9cd9-08344810e0fb",
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"D - missing fields\",\r\n  \"date\": \"2023-05-01\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Bad paraemeters\"\n}"
						}
					]
				},
				{
					"name": "Schedule - Invalid length",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "977591a1-f199-4f3b-a9b5-8992a3894327",
								"exec": [
									"pm.test(\"Status code is error\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "85526ef6-b10c-4d92-abde-8640a37910c7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"D - invalid length\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": -10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "96cb5588-2e83-4a21-940d-b66a4e4b3fe2",
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"D - invalid length\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": -10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\r\n    \"message\": \"Bad paraemeters\"\r\n}"
						}
					]
				},
				{
					"name": "Schedule - Arabic characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e294961b-35ba-4f82-9d78-6c9f06b54572",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"D - جديد اجتماع\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-05-01\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"18:00\");\r",
									"    pm.expect(jsonData.length).to.eql(60);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6a8f1fe3-08bc-43d2-a7b6-59c2b642ef8b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"D - جديد اجتماع\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "23870bda-c3a7-4470-9789-d2bc44945436",
							"name": "Meeting created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"D - جديد اجتماع\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1079,\n    \"topic\": \"D - جديد اجتماع\",\n    \"date\": \"2023-05-01\",\n    \"starttime\": \"18:00\",\n    \"length\": 60\n}"
						}
					]
				},
				{
					"name": "Schedule - Send as XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "18ff9848-b533-4760-9269-00cdc97294a4",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"D - as xml\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-05-01\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"18:00\");\r",
									"    pm.expect(jsonData.length).to.eql(60);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e35faede-8a08-442a-b532-614d1b011621",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<meeting>\r\n  <topic>D - as xml</topic>\r\n  <date>2023-05-01</date>\r\n  <starttime>18:00</starttime>\r\n  <length>60</length>\r\n</meeting>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "d8b974f8-3f70-4fe7-be04-6661079bb984",
							"name": "Meeting created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<meeting>\r\n  <topic>D - as xml</topic>\r\n  <date>2023-05-01</date>\r\n  <starttime>18:00</starttime>\r\n  <length>60</length>\r\n</meeting>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1080,\n    \"topic\": \"D - as xml\",\n    \"date\": \"2023-05-01\",\n    \"starttime\": \"18:00\",\n    \"length\": 60\n}"
						}
					]
				},
				{
					"name": "Schedule - Accept XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d00d8ca-7d1d-4f3a-a5f7-dfdb1e3ea819",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = xml2Json(responseBody);\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"D - accept xml\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-05-01\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"18:00\");\r",
									"    pm.expect(jsonData.length).to.eql(60);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "90687707-9dc3-413e-b999-eb20c287babe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"D - accept xml\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "df391376-bf2a-4d12-8172-7fab270d4f22",
							"name": "Schedule - Accept XML",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"D - accept xml\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "a7a22291-b38b-4401-beb9-1ded251f7f58"
		},
		{
			"name": "Interface",
			"item": [
				{
					"name": "Get Meeting By Topic As Curl",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a689a2ea-b773-4771-8d97-956f3ec16935",
								"exec": [
									"pm.test(\"Status code is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"I - as curl\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-04-02\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"09:00\");\r",
									"    pm.expect(jsonData.length).to.eql(30);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4d43d847-6525-4e78-9586-30ff41b67969",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Agent",
								"value": "curl/7.83.1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{baseUrl}}/?topic=I - As Curl",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "topic",
									"value": "I - As Curl"
								}
							]
						}
					},
					"response": [
						{
							"id": "fd4fb580-2e66-499d-b958-48bb1999f618",
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "curl/7.83.1",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=I - As Curl",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "I - As Curl"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get Meeting By Topic - No Authorization",
					"id": "bc81884f-4220-4dc6-bf6f-a972256b54ce",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}/?topic=I - Unauthorized",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "topic",
									"value": "I - Unauthorized"
								}
							]
						}
					},
					"response": [
						{
							"id": "68030731-69f1-40f3-ac71-2aea9b89aa3c",
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"id": "0b7a9ef0-eb83-4e1b-a35b-ddd7a9b7a53f"
		},
		{
			"name": "Platform",
			"item": [],
			"id": "a682c475-b2ef-4c48-a8a4-ac471d545253"
		},
		{
			"name": "Operation",
			"item": [
				{
					"name": "Scheduling meeting with existing topic",
					"item": [
						{
							"name": "Schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ddc8d37c-4364-4175-8eab-18efbbeaced0",
										"exec": [
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4bac9bae-caa0-4949-a839-d3c872775eb1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - New meeting\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0a07526-7838-4260-9bc0-87a92aacb81d",
										"exec": [
											"pm.test(\"Status code is Ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"old_date\", jsonData.date)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a6141c61-b8f0-47d7-8910-369b87a2ae2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - New meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - New meeting"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Schedule with same topic should fail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0664dc36-36aa-49ef-a6db-e69235b00a54",
										"exec": [
											"pm.test(\"Status code is bad request\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "445ebd08-6b45-4b27-aad7-121e0eb1a2c2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - New meeting\",\r\n  \"date\": \"2024-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Meeting still works for the first schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8932a739-6065-4e56-8880-2b6a074cb55a",
										"exec": [
											"pm.test(\"Status code is Ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Still returns the original successful schedule\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var current_date = jsonData.date;\r",
											"    var old_date = pm.collectionVariables.get(\"old_date\");\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9735b20a-e327-46da-b537-b34ed55597b7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - New meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - New meeting"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "ec29f164-07a5-4bad-a136-16706c9a71e4"
				},
				{
					"name": "Schedule deleted meeting",
					"item": [
						{
							"name": "Schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23bbc865-ba8e-4e59-8407-331c1fc7cca8",
										"exec": [
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d10e5dbf-68dc-4c87-aefe-0326d6a0b20c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - Create new meeting\",\r\n  \"date\": \"2023-06-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03ae3edb-9fd6-4a14-b1dc-e807755badb9",
										"exec": [
											"pm.test(\"Status code is Ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3c515000-ab04-445a-9ed5-a29f74b72030",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create new meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create new meeting"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cdc3fd2a-0310-4b1b-bc2a-eb1c0be15513",
										"exec": [
											"pm.test(\"Status code is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3425b8f9-934e-462d-8201-4ff59ad35305",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create new meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create new meeting"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get deleted meeting should fail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "68ebe00c-5891-49ff-bd05-d06ce292c0aa",
										"exec": [
											"pm.test(\"Status code is Not found\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6a59b774-a74a-4473-b138-fea4b8f24a22",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create new meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create new meeting"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Schedule with same topic",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40f5e634-2a6b-46f0-8ce6-a31cb235fea0",
										"exec": [
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2c3b8e0c-b700-41a0-a1d6-06b8b142ab7b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - Create new meeting\",\r\n  \"date\": \"2025-06-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get \"recreated\" meeting should succeed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee9c9499-3416-4bde-99e1-3a0debfdea82",
										"exec": [
											"pm.test(\"Status code is Ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c7ef1b35-a516-4bf4-a041-57e0c93c2f52",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create new meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create new meeting"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "5bd446b9-a20d-4193-ba68-06d37be14173"
				},
				{
					"name": "Delete twice",
					"item": [
						{
							"name": "Schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "236cd8f4-53f4-4664-86ce-4c4fa88733b6",
										"exec": [
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4f041265-8633-4c45-ac8f-03768e107b41",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - Create for double delete\",\r\n  \"date\": \"2023-06-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3f43a7c3-9116-490a-9750-aea262881d21",
										"exec": [
											"pm.test(\"Status code is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8ab9f93b-2301-440d-aca0-09957e16c894",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create for double delete",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create for double delete"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Meeting again",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "18abfb04-65ea-4e86-8433-251923cde6a7",
										"exec": [
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8ae493dd-ba91-45c4-b2e7-6eac102703cd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create for double delete",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create for double delete"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "94b84081-3ac1-4b90-976f-5f2b4b52a454"
				},
				{
					"name": "Get / Delete after failure",
					"item": [
						{
							"name": "Schedule - Missing fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b258e089-a962-4f5d-8ec1-02eee6a8cb19",
										"exec": [
											"pm.test(\"Status code is error\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "364c1697-685a-4beb-8a58-ec6de8557ec6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - missing fields\",\r\n  \"date\": \"2023-05-01\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54031bc5-0164-4f04-9c17-613638b1309c",
										"exec": [
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3988a440-5f37-44e2-9d1c-52561efec532",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - O - missing fields",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - O - missing fields"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a336fbaf-7a63-46ca-8acb-04ef7203c3d3",
										"exec": [
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "28693671-2664-42ec-8c90-e0a77d2dc304",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - O - missing fields",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - O - missing fields"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "f375466e-6c8c-45aa-b783-ed79487002b7"
				}
			],
			"id": "c355e2e5-955a-42d7-9341-16681e9af768"
		},
		{
			"name": "Time",
			"item": [
				{
					"name": "Schedule - Past date",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b8236d7b-ec96-4944-9656-d1887108b383",
								"exec": [
									"pm.test(\"Status code is error\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message is about meeting in the past\", function () {\r",
									"   var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Cannot schedule meeting in the past\");\r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "66bec300-8532-4668-be7f-fd0a9e468574",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2000-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": []
				}
			],
			"id": "b50aba5d-a484-4d0a-b9cd-9bc0b71d42c0"
		}
	],
	"variable": [
		{
			"id": "13d9166a-4e5c-4856-874f-bdb4d3f385bd",
			"key": "baseUrl",
			"value": "localhost"
		}
	]
}