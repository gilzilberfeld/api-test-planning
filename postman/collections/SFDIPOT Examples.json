{
	"info": {
		"_postman_id": "871a6d7d-291b-4334-bae2-1196598d0637",
		"name": "SFDIPOT Examples",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "2056961-871a6d7d-291b-4334-bae2-1196598d0637"
	},
	"item": [
		{
			"name": "Structure",
			"item": [
				{
					"name": "Schedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43d22257-d5e4-403a-9c52-675cc161c056",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"S - New meeting\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-04-01\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"18:00\");\r",
									"    pm.expect(jsonData.length).to.eql(60);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e909cd0d-c5b6-48c3-8dcc-e20ffa21eb5d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "838a3de3-3b26-46fe-9be8-8728b765671e",
							"name": "Meeting created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1023,\n    \"topic\": \"S - New meeting\",\n    \"date\": \"2023-04-01\",\n    \"starttime\": \"18:00\",\n    \"length\": 60\n}"
						}
					]
				},
				{
					"name": "Schedule - Disconnected DB",
					"id": "9af08997-b0dc-4653-a77d-ee0a48ef0e32",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "d7ff154d-2fa7-40a4-ad19-d6edff5df6fc",
							"name": "Disconnected DB - Client error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Request Timeout",
							"code": 408,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "0f2d550f-766c-4c6d-bad5-c0724f9d7841",
							"name": "Disconnected DB - Server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"id": "7bd9b4ca-7f55-404d-a36a-f339f98f4816"
		},
		{
			"name": "Functionality",
			"item": [
				{
					"name": "Schedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4109cca1-009c-4374-8ac9-99df3568de66",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"F - New meeting\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-04-02\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"09:00\");\r",
									"    pm.expect(jsonData.length).to.eql(30);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "37f01372-e176-405e-ab7b-16398f457046",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"F - New meeting\",\r\n  \"date\": \"2023-04-02\",\r\n  \"starttime\": \"09:00\",\r\n  \"length\": 30\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "801cb9ed-5b25-414d-a468-4081262e4d7a",
							"name": "Meeting created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"F - New meeting\",\r\n  \"date\": \"2023-04-02\",\r\n  \"starttime\": \"09:00\",\r\n  \"length\": 30\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1024,\n    \"topic\": \"F - New meeting\",\n    \"date\": \"2023-04-02\",\n    \"starttime\": \"09:00\",\n    \"length\": 30\n}"
						}
					]
				},
				{
					"name": "Schedule - Existing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85d04f54-14e8-4446-a3a1-d3257519fc8e",
								"exec": [
									"pm.test(\"Status code is bad request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Meeting already scheduled\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "007a2fd7-c634-45f8-99bf-f12d5ac2de57",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"F - New meeting\",\r\n  \"date\": \"2023-04-05\",\r\n  \"starttime\": \"03:00\",\r\n  \"length\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "334c8b37-5438-429e-87a7-4fd39e2f2131",
							"name": "Cannot schedule with same topic",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"F - New meeting\",\r\n  \"date\": \"2023-04-05\",\r\n  \"starttime\": \"03:00\",\r\n  \"length\": 20\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\r\n  \"message\": \"Meeting already scheduled\"\r\n}"
						}
					]
				},
				{
					"name": "Get Meeting By Topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a784ebd9-c8b8-401c-93a6-160ba43424a4",
								"exec": [
									"pm.test(\"Status code is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"F - New meeting\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-04-02\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"09:00\");\r",
									"    pm.expect(jsonData.length).to.eql(30);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "cf98d05d-76c6-429e-8161-75bb68d7461f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}/?topic=F - New meeting",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "topic",
									"value": "F - New meeting"
								}
							]
						}
					},
					"response": [
						{
							"id": "297a8714-cfd9-4dfc-a9e3-a68547117c6b",
							"name": "Meeting received",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=F - New meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "F - New meeting"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1024,\n    \"topic\": \"F - New meeting\",\n    \"date\": \"2023-04-02\",\n    \"starttime\": \"09:00\",\n    \"length\": 30\n}"
						},
						{
							"id": "d24d384c-81c9-4a89-8de0-6383ad5f49e3",
							"name": "Meeting not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=XXX",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "XXX"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Meeting not found\"\n}"
						}
					]
				},
				{
					"name": "Delete Meeting By Topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f60ebfd0-5e77-4555-9526-6c8300d4244d",
								"exec": [
									"pm.test(\"Status code is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Meeting cancelled\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "96bffbe7-5dbf-4f16-9b80-23ccf8584163",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}/?topic=F - New meeting",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "topic",
									"value": "F - New meeting"
								}
							]
						}
					},
					"response": [
						{
							"id": "34d9a8bb-9939-4536-9b93-660298b61b50",
							"name": "Meeting cancelled",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=F - New meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "F - New meeting"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Meeting cancelled\"\n}"
						},
						{
							"id": "9dd63dbf-3e01-49fc-9c2f-a8ea94170338",
							"name": "Meeting not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=XXX",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "XXX"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Meeting not found\"\n}"
						}
					]
				}
			],
			"id": "99817ee5-2845-4d19-9841-b3ecc224cad0"
		},
		{
			"name": "Data",
			"item": [
				{
					"name": "Schedule - Ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b3e2750-ef20-44e3-be51-09290c1ef7fb",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"D - New meeting\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-05-01\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"18:00\");\r",
									"    pm.expect(jsonData.length).to.eql(60);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "da92045f-f1c9-4027-a09e-010b553f6437",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"D - New meeting\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "bb20aef9-13d7-44de-ae16-2d5d7fdf0d80",
							"name": "Meeting created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"D - New meeting\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1078,\n    \"topic\": \"D - New meeting\",\n    \"date\": \"2023-05-01\",\n    \"starttime\": \"18:00\",\n    \"length\": 60\n}"
						}
					]
				},
				{
					"name": "Schedule - Missing Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e3ab662-9ef2-45e7-a55e-0d212822a3c0",
								"exec": [
									"pm.test(\"Status code is error\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d6229106-9dce-4914-9c68-000ee2b32348",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"D - missing fields\",\r\n  \"date\": \"2023-05-01\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "d0b7753b-08a9-4276-bf42-9edcd7169232",
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"D - missing fields\",\r\n  \"date\": \"2023-05-01\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Bad paraemeters\"\n}"
						}
					]
				},
				{
					"name": "Schedule - Invalid length",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fe6ebae-c26d-4d32-a8d7-d1a877c42678",
								"exec": [
									"pm.test(\"Status code is error\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "89df6dae-2f4a-455e-b21d-2e761df0c879",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"D - invalid length\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": -10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "ceb671c1-9d07-4bde-a410-e5774ec9dc09",
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"D - invalid length\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": -10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\r\n    \"message\": \"Bad paraemeters\"\r\n}"
						}
					]
				},
				{
					"name": "Schedule - Arabic characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1b5b18d-4f85-4c33-a5bd-caab25871f83",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"D - جديد اجتماع\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-05-01\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"18:00\");\r",
									"    pm.expect(jsonData.length).to.eql(60);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a1e16c7c-b69b-4595-8114-bd373e734f5a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"D - جديد اجتماع\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "5631d370-8da0-42a4-8b17-e75774d2725e",
							"name": "Meeting created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"D - جديد اجتماع\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1079,\n    \"topic\": \"D - جديد اجتماع\",\n    \"date\": \"2023-05-01\",\n    \"starttime\": \"18:00\",\n    \"length\": 60\n}"
						}
					]
				},
				{
					"name": "Schedule - Send as XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d7fda2fc-e888-43cc-a950-fbd9568cf0d1",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"D - as xml\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-05-01\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"18:00\");\r",
									"    pm.expect(jsonData.length).to.eql(60);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9c005971-b601-4ead-84f3-ed2c7ac49aed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<meeting>\r\n  <topic>D - as xml</topic>\r\n  <date>2023-05-01</date>\r\n  <starttime>18:00</starttime>\r\n  <length>60</length>\r\n</meeting>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "4ae8386d-ec2e-4661-8fb4-0a025a150f6e",
							"name": "Meeting created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<meeting>\r\n  <topic>D - as xml</topic>\r\n  <date>2023-05-01</date>\r\n  <starttime>18:00</starttime>\r\n  <length>60</length>\r\n</meeting>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1080,\n    \"topic\": \"D - as xml\",\n    \"date\": \"2023-05-01\",\n    \"starttime\": \"18:00\",\n    \"length\": 60\n}"
						}
					]
				},
				{
					"name": "Schedule - Accept XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a80da4da-36fa-4b98-9d20-fb058994362a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = xml2Json(responseBody);\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"D - accept xml\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-05-01\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"18:00\");\r",
									"    pm.expect(jsonData.length).to.eql(60);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6cb35882-c5ce-45cd-bee0-e57a62d9917f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"D - accept xml\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "cd36392e-83e6-4d11-b093-71372cef6bf5",
							"name": "Schedule - Accept XML",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"D - accept xml\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "29359426-bf75-4b66-bfe5-b96649c7a04f"
		},
		{
			"name": "Interface",
			"item": [
				{
					"name": "Get Meeting By Topic As Curl",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "900983e5-9a81-487e-973a-37408c226b5a",
								"exec": [
									"pm.test(\"Status code is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.topic).to.eql(\"I - as curl\");\r",
									"    pm.expect(jsonData.date).to.eql(\"2023-04-02\");\r",
									"    pm.expect(jsonData.starttime).to.eql(\"09:00\");\r",
									"    pm.expect(jsonData.length).to.eql(30);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0e790258-fbab-41a5-bb54-638cc846948f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Agent",
								"value": "curl/7.83.1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{baseUrl}}/?topic=I - As Curl",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "topic",
									"value": "I - As Curl"
								}
							]
						}
					},
					"response": [
						{
							"id": "7428c2cc-1faa-48a1-9d3c-102a55bea81b",
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "curl/7.83.1",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=I - As Curl",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "I - As Curl"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get Meeting By Topic - No Authorization",
					"id": "12602fee-4596-4489-b033-52c5cb42a5bd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}/?topic=I - Unauthorized",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "topic",
									"value": "I - Unauthorized"
								}
							]
						}
					},
					"response": [
						{
							"id": "77b237e7-81bb-44c0-99a0-98a30dace4da",
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"id": "fe21d0b4-61b0-493a-8faa-91bf2a965550"
		},
		{
			"name": "Platform",
			"item": [
				{
					"name": "Schedule On Linux",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43e03432-ceee-4c8b-a280-d8869cddd2c4",
								"exec": [
									"pm.test(\"Status code is Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7db467fd-f277-4cbf-937b-2cdf043bb427",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"P - Meeting on Linux\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "26140255-1621-498f-b808-43ac9a8d6ff7",
							"name": "Meeting created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"P - Meeting on Linux\",\r\n  \"date\": \"2023-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1023,\n    \"topic\": \"P - Meeting on Linux\",\n    \"date\": \"2023-04-01\",\n    \"starttime\": \"18:00\",\n    \"length\": 60\n}"
						}
					]
				},
				{
					"name": "Schedule On Windows",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28fa864f-f7ca-4e3b-82e5-17d1462f883b",
								"exec": [
									"pm.test(\"Status code is Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ed20b3aa-de72-48ba-af77-15ce679f3eaf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"P - Meeting on Windows\",\r\n  \"date\": \"2023-04-05\",\r\n  \"starttime\": \"03:00\",\r\n  \"length\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": [
						{
							"id": "f06ca02a-f0f2-4b83-a25a-38816658e838",
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"F - New meeting\",\r\n  \"date\": \"2023-04-05\",\r\n  \"starttime\": \"03:00\",\r\n  \"length\": 20\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "3aab38d8-b38a-4b9e-b057-faf0596dca09"
		},
		{
			"name": "Operation",
			"item": [
				{
					"name": "Scheduling meeting with existing topic",
					"item": [
						{
							"name": "Schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1835f48f-9b98-48bd-863e-c37851e36ad1",
										"exec": [
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8c6bed5e-e8d8-4e4b-9562-af0721b2549a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - New meeting\",\r\n  \"date\": \"2023-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bc3a8bbf-5b72-49e2-98b0-a0a1be96f1cc",
										"exec": [
											"pm.test(\"Status code is Ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"old_date\", jsonData.date)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b47a0de5-db40-4f33-bd5b-fcebae9b5b2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - New meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - New meeting"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Schedule with same topic should fail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c13a6ec6-098e-4e3e-8110-c3c62f1623f9",
										"exec": [
											"pm.test(\"Status code is bad request\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5b6ac751-7ce7-473d-8581-d1e23c4b2bce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - New meeting\",\r\n  \"date\": \"2024-05-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Meeting still works for the first schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01fac55f-300b-4a88-b857-9a76d991d45f",
										"exec": [
											"pm.test(\"Status code is Ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Still returns the original successful schedule\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var current_date = jsonData.date;\r",
											"    var old_date = pm.collectionVariables.get(\"old_date\");\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "164f5de9-7303-451f-976e-c3489010c10d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - New meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - New meeting"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "4c1fcc98-24ef-42db-be36-c906d7dde686"
				},
				{
					"name": "Schedule deleted meeting",
					"item": [
						{
							"name": "Schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf1a57b7-6487-4f41-b190-641230a7bc1e",
										"exec": [
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6e6c3ea0-121b-4450-b351-749af64fddaa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - Create new meeting\",\r\n  \"date\": \"2023-06-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ede3db82-f720-48f4-aec1-e55d20fe9422",
										"exec": [
											"pm.test(\"Status code is Ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bb228f2d-2aa1-4d01-a579-987363d17321",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create new meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create new meeting"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cae7ef29-a194-4f31-9673-8f3d8dbda115",
										"exec": [
											"pm.test(\"Status code is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "72025ed6-30be-43d7-a409-a73d5ad40f12",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create new meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create new meeting"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get deleted meeting should fail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9219db44-cee1-4497-b86f-b3e68175a87e",
										"exec": [
											"pm.test(\"Status code is Not found\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d7ecba4c-089d-4c42-a40b-a6ec575aaee3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create new meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create new meeting"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Schedule with same topic",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab536b04-88bc-4e69-8f45-8e9e3a293046",
										"exec": [
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "80571861-3b37-4719-bc20-6f6cd657a9c9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - Create new meeting\",\r\n  \"date\": \"2025-06-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get \"recreated\" meeting should succeed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d81dd60-0fbd-4842-ab66-2f7e288eb290",
										"exec": [
											"pm.test(\"Status code is Ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bd981c5b-7fce-43cd-9456-28861e154de8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create new meeting",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create new meeting"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "f35e217d-30d0-4770-9d91-3f83db45d7de"
				},
				{
					"name": "Delete twice",
					"item": [
						{
							"name": "Schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ef2d5e4d-17cc-4d44-958f-c7b26f8e7356",
										"exec": [
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "60e55908-5bf9-4f85-af8f-314ed2296e76",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - Create for double delete\",\r\n  \"date\": \"2023-06-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "49f38ae7-eaf0-4213-a2e6-1a170ea8ce90",
										"exec": [
											"pm.test(\"Status code is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e49212dc-8fc5-454b-b54a-58d3cec8bc6c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create for double delete",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create for double delete"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Meeting again",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31490d3a-8ae6-47d4-910e-93f0b407f636",
										"exec": [
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9339d666-5ed5-4460-9d8a-fb179b148431",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - Create for double delete",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - Create for double delete"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "ab870a37-7652-4785-a723-4195cff29508"
				},
				{
					"name": "Get / Delete after failure",
					"item": [
						{
							"name": "Schedule - Missing fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "06f14992-e86c-4cd6-9c22-5339f2e69241",
										"exec": [
											"pm.test(\"Status code is error\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e212a568-f649-49a8-95f5-dbf5db0e6751",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"topic\": \"O - missing fields\",\r\n  \"date\": \"2023-05-01\",\r\n  \"length\": 60\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{baseUrl}}/schedule",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44fdde0b-f358-4374-a62c-942ae9c73c0d",
										"exec": [
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2743de3e-183a-45c3-8ae1-2b36af02b80d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - O - missing fields",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - O - missing fields"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "42722a2c-a109-4a41-b940-5f318b887f10",
										"exec": [
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a943d7fd-96ad-4a8d-9c46-b2db75438c25",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{baseUrl}}/?topic=O - O - missing fields",
									"protocol": "http",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "topic",
											"value": "O - O - missing fields"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "fffcc7c2-893d-46f4-bbf5-dcc977f7306b"
				}
			],
			"id": "c8cfed9a-fc90-4141-879e-f071796da218"
		},
		{
			"name": "Time",
			"item": [
				{
					"name": "Schedule - Past date",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b321ffd-c8ef-4930-9713-d026395bd5ac",
								"exec": [
									"pm.test(\"Status code is error\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message is about meeting in the past\", function () {\r",
									"   var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Cannot schedule meeting in the past\");\r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "43266de8-af19-4712-a8f6-0481f03a643f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"S - New meeting\",\r\n  \"date\": \"2000-04-01\",\r\n  \"starttime\": \"18:00\",\r\n  \"length\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/schedule",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							]
						}
					},
					"response": []
				}
			],
			"id": "98ee1bcb-0a35-48f1-8313-b177f3c6fc93"
		}
	],
	"variable": [
		{
			"id": "f742e840-cf39-4ee8-8ee8-41b34d13aa40",
			"key": "baseUrl",
			"value": "localhost"
		}
	]
}